#!/usr/bin/env php
<?php

declare(strict_types=1);

use Psr\Container\ContainerInterface;
use Yiisoft\Config\Config;
use Yiisoft\Di\Container;
use Yiisoft\Yii\Console\Application;
use Yiisoft\Yii\Console\Output\ConsoleBufferedOutput;

(static function () {
    $autoloadPath = null;

    for ($x = 5; $x > 0; $x--) {
        $possibleAutoloadPath = dirname(__FILE__, $x) . '/vendor/autoload.php';
        if (file_exists($possibleAutoloadPath)) {
            $autoloadPath = $possibleAutoloadPath;
            break;
        }
    }

    if ($autoloadPath === null) {
        $message = "Unable to find vendor/autoload.php\n\n";
        $message .= "Possible fixes:\n";
        $message .= "- Install yiisoft/console via Composer.\n";
        $message .= "- Make sure the yii executable is located inside your project folder.\n";
        fwrite(STDERR, $message);
        exit(1);
    }

    require_once $autoloadPath;

    $config = new Config(
        dirname($autoloadPath, 2),
        '/config/packages',
    );

    $container = new Container(
        $config->get('console'),
        $config->get('providers-console')
    );

    /** @var ContainerInterface $container */
    $container = $container->get(ContainerInterface::class);

    $application = $container->get(Application::class);
    $exitCode = 1;

    try {
        $application->start();
        $exitCode = $application->run(null, new ConsoleBufferedOutput());
    } catch (\Error $error) {
        $application->renderThrowable($error, new ConsoleBufferedOutput());
    } finally {
        $application->shutdown($exitCode);
        exit($exitCode);
    }
})();
